
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListDataEvent;
import javax.swing.event.ListDataListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

public class GUI extends javax.swing.JFrame {

    private ListModelKunden listModelKunden;
    private Manager manager;
    private TableModelStellplaetze tabelModelStellplaetze;
    private int[] StellplatzeProEtage = {5,3,5};
    private int einnahmeZeitraum;

    /**
     * Creates new form GUI
     */
    public GUI() {
        manager = new Manager(0, StellplatzeProEtage);
        listModelKunden = new ListModelKunden();
        tabelModelStellplaetze = new TableModelStellplaetze();
        einnahmeZeitraum = Manager.JAHR;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMain = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButtonAdd = new javax.swing.JButton();
        jButtonBezahlen = new javax.swing.JButton();
        jButtonVerlassen = new javax.swing.JButton();
        jButtonNotfall = new javax.swing.JButton();
        jLabelEinnahmen = new javax.swing.JLabel();
        jLabelAnzahlKunden = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButtonZeitStunde = new javax.swing.JButton();
        jButtonZeitTag = new javax.swing.JButton();
        jButtonZeitWoche = new javax.swing.JButton();
        jButtonZeitJahr = new javax.swing.JButton();
        jButtonZeitMonat = new javax.swing.JButton();
        jLabelEinnahmenProKunde = new javax.swing.JLabel();
        zeichneKurve1 = new ZeichneKurve();
        jMenuBar = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuEdit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jList1.setModel(listModelKunden);
        jList1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(jList1);

        jButtonAdd.setText("add");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonBezahlen.setText("bezahlen");
        jButtonBezahlen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBezahlenActionPerformed(evt);
            }
        });

        jButtonVerlassen.setText("verlassen");
        jButtonVerlassen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVerlassenActionPerformed(evt);
            }
        });

        jButtonNotfall.setText("Notfall");
        jButtonNotfall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNotfallActionPerformed(evt);
            }
        });

        jLabelEinnahmen.setText("Einnahmen: â‚¬0");

        jLabelAnzahlKunden.setText("Anzahl Kunden: 0");

        jTable1.setModel(tabelModelStellplaetze);
        jScrollPane3.setViewportView(jTable1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tag", "Woche", "Monat", "Jahr" }));
        jComboBox1.setSelectedIndex(3);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButtonZeitStunde.setText("Zeit um 1 Stunde vergehen lassen");
        jButtonZeitStunde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZeitStundeActionPerformed(evt);
            }
        });

        jButtonZeitTag.setText("Zeit um 1 Tag vergehen lassen");
        jButtonZeitTag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZeitTagActionPerformed(evt);
            }
        });

        jButtonZeitWoche.setText("Zeit um 1 Woche vergehen lassen");
        jButtonZeitWoche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZeitWocheActionPerformed(evt);
            }
        });

        jButtonZeitJahr.setText("Zeit um 1 Jahr vergehen lassen");
        jButtonZeitJahr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZeitJahrActionPerformed(evt);
            }
        });

        jButtonZeitMonat.setText("Zeit um 1 Monat vergehen lassen");
        jButtonZeitMonat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZeitMonatActionPerformed(evt);
            }
        });

        jLabelEinnahmenProKunde.setText("Einnahmen pro Kunde:");

        javax.swing.GroupLayout zeichneKurve1Layout = new javax.swing.GroupLayout(zeichneKurve1);
        zeichneKurve1.setLayout(zeichneKurve1Layout);
        zeichneKurve1Layout.setHorizontalGroup(
            zeichneKurve1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        zeichneKurve1Layout.setVerticalGroup(
            zeichneKurve1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanelMainLayout = new javax.swing.GroupLayout(jPanelMain);
        jPanelMain.setLayout(jPanelMainLayout);
        jPanelMainLayout.setHorizontalGroup(
            jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelMainLayout.createSequentialGroup()
                        .addComponent(jButtonAdd)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonBezahlen)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonVerlassen)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonNotfall)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelEinnahmen))
                    .addComponent(jScrollPane1)
                    .addComponent(jLabelEinnahmenProKunde)
                    .addComponent(zeichneKurve1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
                    .addGroup(jPanelMainLayout.createSequentialGroup()
                        .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelAnzahlKunden)
                            .addGroup(jPanelMainLayout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButtonZeitJahr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonZeitMonat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonZeitWoche, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonZeitTag, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonZeitStunde, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelMainLayout.setVerticalGroup(
            jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdd)
                    .addComponent(jButtonBezahlen)
                    .addComponent(jButtonVerlassen)
                    .addComponent(jButtonNotfall)
                    .addComponent(jLabelEinnahmen)
                    .addComponent(jLabelAnzahlKunden))
                .addGap(18, 18, 18)
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMainLayout.createSequentialGroup()
                        .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonZeitStunde))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonZeitTag)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonZeitWoche)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonZeitMonat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonZeitJahr)
                        .addGap(0, 108, Short.MAX_VALUE))
                    .addGroup(jPanelMainLayout.createSequentialGroup()
                        .addComponent(jLabelEinnahmenProKunde)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(zeichneKurve1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jMenuFile.setText("File");
        jMenuBar.add(jMenuFile);

        jMenuEdit.setText("Edit");
        jMenuBar.add(jMenuEdit);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        listModelKunden.addKunde(new Kunde());
        jLabelAnzahlKunden.setText("Anzahl Kunden: " + Kunde.getCount());
        tabelModelStellplaetze.updateTable();
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonBezahlenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBezahlenActionPerformed
        listModelKunden.bezahlen(jList1.getSelectedIndex());
        jLabelEinnahmen.setText("Einnahmen: " + manager.getEinnahmen(3));
        zeichneKurve1.setWerte(manager.getEinnahmenAsIntegerList(einnahmeZeitraum));
        zeichneKurve1.update(zeichneKurve1.getGraphics());
    }//GEN-LAST:event_jButtonBezahlenActionPerformed

    private void jButtonVerlassenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVerlassenActionPerformed
        listModelKunden.verlassen(jList1.getSelectedIndex());
        tabelModelStellplaetze.updateTable();
    }//GEN-LAST:event_jButtonVerlassenActionPerformed

    private void jButtonNotfallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNotfallActionPerformed
        listModelKunden.notfall(jList1.getSelectedIndex());
    }//GEN-LAST:event_jButtonNotfallActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        einnahmeZeitraum = jComboBox1.getSelectedIndex();
        zeichneKurve1.setWerte(manager.getEinnahmenAsIntegerList(einnahmeZeitraum));
        zeichneKurve1.update(zeichneKurve1.getGraphics());
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButtonZeitStundeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZeitStundeActionPerformed
        Zeit.erhÃ¶heOffset(1); 
        zeichneKurve1.setWerte(manager.getEinnahmenAsIntegerList(einnahmeZeitraum));
        zeichneKurve1.update(zeichneKurve1.getGraphics());
    }//GEN-LAST:event_jButtonZeitStundeActionPerformed

    private void jButtonZeitWocheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZeitWocheActionPerformed
        Zeit.erhÃ¶heOffset(24*7);
        zeichneKurve1.setWerte(manager.getEinnahmenAsIntegerList(einnahmeZeitraum));
        zeichneKurve1.update(zeichneKurve1.getGraphics());
    }//GEN-LAST:event_jButtonZeitWocheActionPerformed

    private void jButtonZeitTagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZeitTagActionPerformed
        Zeit.erhÃ¶heOffset(24);
        zeichneKurve1.setWerte(manager.getEinnahmenAsIntegerList(einnahmeZeitraum));
        zeichneKurve1.update(zeichneKurve1.getGraphics());
    }//GEN-LAST:event_jButtonZeitTagActionPerformed

    private void jButtonZeitMonatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZeitMonatActionPerformed
        Zeit.erhÃ¶heOffset(24*30);
        zeichneKurve1.setWerte(manager.getEinnahmenAsIntegerList(einnahmeZeitraum));
        zeichneKurve1.update(zeichneKurve1.getGraphics());
    }//GEN-LAST:event_jButtonZeitMonatActionPerformed

    private void jButtonZeitJahrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZeitJahrActionPerformed
        Zeit.erhÃ¶heOffset(24*365);
        zeichneKurve1.setWerte(manager.getEinnahmenAsIntegerList(einnahmeZeitraum));
        zeichneKurve1.update(zeichneKurve1.getGraphics());
    }//GEN-LAST:event_jButtonZeitJahrActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    private class ListModelKunden implements javax.swing.ListModel<Kunde> {

        private List<ListDataListener> listListDataListener;
        private List<Kunde> listKunde;

        public ListModelKunden() {
            listListDataListener = new ArrayList<>();
            listKunde = new ArrayList<>();

            manager.getKunden().stream()
                    .forEach(k -> listKunde.add(k));
            listListDataListener.stream()
                    .forEach(l -> l.intervalAdded(new ListDataEvent(this, ListDataEvent.INTERVAL_ADDED, 0, getSize())));
        }

        public void addKunde(Kunde kunde) {
            try {
                manager.addKunde(kunde);
                listKunde.add(kunde);
                listListDataListener.stream()
                        .forEach(l -> l.intervalAdded(new ListDataEvent(this, ListDataEvent.INTERVAL_ADDED, 0, getSize())));
            } catch (ParkhausIstVollException ex) {
                JOptionPane.showMessageDialog(GUI.this, ex.getMessage());
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        private void bezahlen(int selectedIndex) {
            Kunde kunde = manager.getKunden().get(selectedIndex);
            manager.bezahlen(kunde);
            listKunde.set(selectedIndex, kunde);
            listListDataListener.stream()
                    .forEach(l -> l.contentsChanged(new ListDataEvent(this, ListDataEvent.CONTENTS_CHANGED, 0, getSize())));
        }

        private void verlassen(int selectedIndex) {
            try {
                Kunde kunde = manager.getKunden().get(selectedIndex);
                manager.verlassen(kunde);
                listKunde.set(selectedIndex, kunde);
                listListDataListener.stream()
                        .forEach(l -> l.contentsChanged(new ListDataEvent(this, ListDataEvent.CONTENTS_CHANGED, 0, getSize())));
            } catch (KundeHatNichtBezahltException ex) {
                JOptionPane.showMessageDialog(GUI.this, ex.getMessage());
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        private void notfall(int selectedIndex) {
            Kunde kunde = manager.getKunden().get(selectedIndex);
            kunde.notfall();
            listKunde.set(selectedIndex, kunde);
            listListDataListener.stream()
                    .forEach(l -> l.contentsChanged(new ListDataEvent(this, ListDataEvent.CONTENTS_CHANGED, 0, getSize())));
        }

        @Override
        public int getSize() {
            return listKunde.size();
        }

        @Override
        public Kunde getElementAt(int index) {
            return listKunde.get(index);
        }

        @Override
        public void addListDataListener(ListDataListener l) {
            listListDataListener.add(l);
        }

        @Override
        public void removeListDataListener(ListDataListener l) {
            listListDataListener.remove(l);
        }
    }

    private class TableModelStellplaetze implements javax.swing.table.TableModel {

        private List<TableModelListener> listeners;

        public TableModelStellplaetze() {
            listeners = new ArrayList<>();
        }

        public void updateTable() {
            listeners.stream()
                    .forEach(l -> l.tableChanged(new TableModelEvent(this)));
        }
        
        @Override
        public int getRowCount() {
            return StellplatzeProEtage.length;
        }

        @Override
        public int getColumnCount() {
            //suche groesste Etage
            int max = 0;
            for (int i = 0; i < StellplatzeProEtage.length; i++) {
                if (max < StellplatzeProEtage[i]) {
                    max = StellplatzeProEtage[i];
                }
            }
            return max;
        }

        @Override
        public String getColumnName(int columnIndex) {
            return columnIndex + "";
        }

        @Override
        public Class<?> getColumnClass(int columnIndex) {
            return Integer.class;
        }

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return false;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            return Einweiser.getInstance(StellplatzeProEtage).Stellplatzbelegt(rowIndex + "." + columnIndex)? "besetzt" : "frei";
        }

        @Override
        public void setValueAt(Object aValue, int rowIndex, int columnIndex) {}

        @Override
        public void addTableModelListener(TableModelListener l) {
            listeners.add(l);
        }

        @Override
        public void removeTableModelListener(TableModelListener l) {
            listeners.remove(l);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonBezahlen;
    private javax.swing.JButton jButtonNotfall;
    private javax.swing.JButton jButtonVerlassen;
    private javax.swing.JButton jButtonZeitJahr;
    private javax.swing.JButton jButtonZeitMonat;
    private javax.swing.JButton jButtonZeitStunde;
    private javax.swing.JButton jButtonZeitTag;
    private javax.swing.JButton jButtonZeitWoche;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabelAnzahlKunden;
    private javax.swing.JLabel jLabelEinnahmen;
    private javax.swing.JLabel jLabelEinnahmenProKunde;
    private javax.swing.JList<Kunde> jList1;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jMenuEdit;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private ZeichneKurve zeichneKurve1;
    // End of variables declaration//GEN-END:variables
}
